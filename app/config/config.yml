imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi:             ~
    translator:      ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        handler_id:  session.handler.pdo
    fragments:       ~
    http_method_override: true


# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        site: Student Carpooling.tn 2017 Â©
        app_name: Student Carpooling.tn

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


# FosUserBundl Configuration

fos_user:

    db_driver: orm
    firewall_name: main
    user_class: Wanasni\UserBundle\Entity\User

    registration:
        form:
            type: wanasni_user_registration
        confirmation:
            enabled:    true

    profile:
        form:
            type: wanasni_user_edit_profile


#FosMessageBundle
fos_message:
    db_driver: orm
    thread_class: Wanasni\MessageBundle\Entity\Thread
    message_class: Wanasni\MessageBundle\Entity\Message
    new_thread_form:
        type:               fos_message.new_thread_multiple_form.type
        handler:            fos_message.new_thread_multiple_form.handler
        model:              FOS\MessageBundle\FormModel\NewThreadMultipleMessage
        name:               message
#Doctrine
services:
    fos_user.doctrine_registry:
        alias: doctrine

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

doctrine_cache:
    providers:
        redis_cache:
            redis:
                host: 127.0.0.1
                port: 6379
                database: 3
        websocket_cache_client:
            type: redis
            alias: gos_web_socket.client_storage.driver.redis


snc_redis:
    clients:
        ws_client:
            type: predis
            alias: client_storage.driver #snc_redis.client_storage.driver
            dsn: redis://127.0.0.1/2
            logging: %kernel.debug%
            options:
                profile: 2.2
                connection_timeout: 10
                read_write_timeout: 30



gos_web_socket:
    client:
        session_handler: @session.handler.pdo
        firewall: main # Example: secured_area, you must replace it by your firewall
        storage:
            driver: @gos_web_socket.client_storage.driver.predis
            ttl: 28800 #(optionally) time to live if you use redis driver
            prefix: client #(optionally) prefix if you use redis driver, create key "client:1" instead key "1"
    server:
        port: 8080
        host: 127.0.0.1
        origin_check:         false
        router:
            resources:
                - @WanasniWebsocketBundle/Resources/config/pubsub/routing.yml
            context:
                tokenSeparator: "/"
